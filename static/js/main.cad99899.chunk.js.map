{"version":3,"sources":["Actions/ContactActions.js","Actions/types.js","Components/contact/Contact.js","Components/contact/ContactList.js","Components/forms/TextInputGroup.js","Components/contact/AddContact.js","Pages/About.js","Components/Header/Header.js","Pages/NotFound.js","Components/Test/Test.js","Components/contact/EditContact.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["getContacts","dispatch","a","axios","get","response","type","payload","data","Contact","showAge","setState","state","onDelete","contact","props","deleteContact","id","name","age","arrowClass","this","className","onClick","email","phone","to","style","cursor","color","bind","React","Component","prototypes","PropTypes","func","isRequired","connect","delete","ContactList","contactList","filter","item","length","placeholder","onChange","event","masterContactList","indexOf","target","value","map","index","key","toString","array","TextInputGroup","label","error","htmlFor","classNames","prototype","string","object","defaultProps","AddContact","errors","onSubmit","preventDefault","isValid","newContact","addContact","history","push","post","About","match","params","Header","NotFound","Test","title","body","console","log","fetch","then","json","prevProps","prevState","nextProps","test","EditContact","parseInt","updatedContact","updateContact","find","put","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cad99899.chunk.js","sourcesContent":["import { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT, UPDATE_CONTACT } from \"./types\";\r\nimport axios from 'axios';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/users`);\r\n    dispatch({\r\n        type: GET_CONTACTS,\r\n        payload: response.data\r\n    })\r\n};\r\n\r\nexport const deleteContact = (id) => async dispatch => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n        type: DELETE_CONTACT,\r\n        payload: id\r\n    });\r\n};\r\n\r\nexport const addContact = (contact) => async dispatch => {\r\n    const response = await axios.post(`https://jsonplaceholder.typicode.com/users`, contact);\r\n    dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const updateContact = (contact) => async dispatch => {\r\n    const response = await axios.put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact);\r\n    dispatch({\r\n        type: UPDATE_CONTACT,\r\n        payload: response.data\r\n    });\r\n};","export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../Actions/ContactActions';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Contact extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: 'Yogesh',\r\n            age: 32\r\n        }\r\n    }\r\n\r\n    showAge = () => {\r\n        this.setState({\r\n            \"showAge\": !this.state.showAge\r\n        });\r\n    }\r\n\r\n    onDelete = (contact, dispatch) => {\r\n        this.props.deleteContact(contact.id);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const arrowClass = !this.state.showAge ? \"fa fa-angle-double-down\" : \"fa fa-angle-double-up\" ;\r\n        const contact = this.props.contact;\r\n        return <div>\r\n                {contact && \r\n                    <div className=\"row text-left\">\r\n                        <div className=\"col-sm-10\" onClick={this.showAge}>\r\n                            <strong>\r\n                                {contact.name}\r\n                                &nbsp;&nbsp;\r\n                                <span onClick={this.showAge}>\r\n                                    <i className={arrowClass}></i>\r\n                                </span>\r\n                            </strong>\r\n                            \r\n                            { this.state.showAge ?  \r\n                                <div className=\"card-body\">\r\n                                    <p>Email address: {contact.email}</p>\r\n                                    <p>phone: {contact.phone}</p> \r\n                                </div>\r\n                            : null }\r\n                        </div>\r\n                        \r\n                        <div className=\"col-sm-1\">\r\n                            <Link to={`contact/edit/${contact.id}`}>\r\n                                <i className=\"fa fa-pencil fa-2x\"\r\n                                    style={{\r\n                                        cursor: 'pointer',\r\n                                        color: 'black'\r\n                                    }}></i>\r\n                            </Link>\r\n                            &nbsp;&nbsp;\r\n                            <i className=\"fa fa-remove fa-2x\" \r\n                            style={{\r\n                                cursor: 'pointer',\r\n                                color: 'red'\r\n                            }}\r\n                            onClick={this.onDelete.bind(this, contact)}></i>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                \r\n    \r\n            </div>\r\n    }\r\n}\r\nContact.prototypes = {\r\n    deleteContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, \r\n    {deleteContact}\r\n    )(Contact);","import React from 'react';\r\nimport Contact from './Contact';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getContacts } from '../../Actions/ContactActions';\r\n\r\nclass ContactList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getContacts();\r\n    }\r\n\r\n    render() {\r\n        const { contactList } = this.props;\r\n        const deleteContact = (contact) => {\r\n            const contactList = this.state.contactList.filter((item) => {\r\n                return (item.name !== contact.name && item.age !== contact.age);\r\n            })\r\n            this.setState({ contactList: contactList });\r\n        }\r\n\r\n        const onSearch = (event) => {\r\n            const contactList = this.state.masterContactList.filter((item) => {\r\n                return item.name.indexOf(event.target.value) > -1;\r\n            })\r\n            this.setState({ contactList: contactList });\r\n        }\r\n        return (\r\n            <div>\r\n                <h4 className=\"\">Contact List ({contactList && contactList.length})</h4>\r\n                <div className=\"form-group m-sm-2\">\r\n                    <input type=\"text\" className=\"form-control p-sm-1\" placeholder=\"search...\" id=\"search\" onChange={onSearch} />\r\n                </div>\r\n                <ul className=\"list-group m-sm-2\">\r\n                    {contactList.map((contact, index) => {\r\n                        return <li key={index.toString()} className=\"list-group-item\">\r\n                            <Contact contact={contact} deleteContact={deleteContact}></Contact>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContactList.prototypes = {\r\n    contactList: PropTypes.array.isRequired,\r\n    getContacts: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contactList: state.contact.contactList\r\n});\r\n\r\nexport default connect(mapStateToProps, \r\n    {getContacts}\r\n)(ContactList);","\r\nimport  React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nconst TextInputGroup = ({label, name, value, placeholder, type, onChange, error}) => {\r\n    return (\r\n\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type}\r\n                name={name}\r\n                className={classNames(\r\n                    \"form-control\", \r\n                    \"form-control-lg\", {\r\n                        'is-invalid': error\r\n                    })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}></input>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.prototype = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired, \r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired, \r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.object\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React from 'react'\r\nimport TextInputGroup from '../forms/TextInputGroup';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../Actions/ContactActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddContact extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            isValid = false;\r\n        }\r\n        if (!email) {\r\n            this.setState({ errors: { age: 'Email is required' } });\r\n            isValid = false;\r\n        }\r\n\r\n        if (!phone) {\r\n            this.setState({ errors: { age: 'Phone is required' } });\r\n            isValid = false;\r\n        }\r\n\r\n        if (!isValid) return;\r\n\r\n        const newContact = { name, email, phone };\r\n        this.props.addContact(newContact);\r\n\r\n        this.setState({ name: '', age: '', errors: {} });\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <div className=\"card mb-3\">\r\n                <div className=\"card-header\">Add Contact</div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <TextInputGroup\r\n                            name=\"name\" label=\"Name\"\r\n                            placeholder=\"Enter Name...\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error={errors.name}\r\n                        />\r\n                        <TextInputGroup\r\n                            name=\"email\" label=\"Email Address\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email...\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextInputGroup\r\n                            name=\"phone\" label=\"Phone\"\r\n                            placeholder=\"Enter Phone...\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error={errors.phone}\r\n                        />\r\n                        <input className=\"btn btn-dark btn-block\" type=\"submit\" value=\"Add Contact\"></input>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddContact.prototypes = {\r\n    addContact: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, {addContact})(AddContact);","import React from 'react'\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card mb-3\">\r\n                <h1 className=\"display-4\">About page</h1>\r\n                <p>Simple App to manage contacts</p>\r\n                <p className=\"text-secondary\">v1.0.0</p>\r\n                <p>{this.props.match.params.id}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"jumbotron jumbotron-fluid\">\r\n                    <h1>Contact Manager Application</h1>\r\n                    <nav className=\"pull-left navbar navbar-expand-sm\">\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\">Add</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about/\" className=\"nav-link\">About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/test/\" className=\"nav-link\">Test</Link>\r\n                            </li>\r\n                        </ul>\r\n\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <h1 className=\"display-4\">404 Not found</h1>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\n\r\nclass Test extends React.Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount...\");\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }))\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"componentDidUpdate...\");\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log(\"componentWillMount...\");\r\n    // }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log(\"componentWillUpdate...\");\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log(\"componentWillReceiveProps...\");\r\n    // }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return {\r\n            test: 'test1'\r\n        };\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log(\"getSnapshotBeforeUpdate...\");\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import React from 'react'\r\nimport TextInputGroup from '../forms/TextInputGroup';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { updateContact, getContacts } from '../../Actions/ContactActions';\r\n\r\nclass EditContact extends React.Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const contactList = this.props.contactList;\r\n        const contact = contactList.find(contact => contact.id === parseInt(id));\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n        let { id } = this.props.match.params;\r\n        id = parseInt(id);\r\n        let isValid = true;\r\n\r\n        if (!name) {\r\n            this.setState({errors: {name: 'Name is required'}});\r\n            isValid = false;\r\n        }\r\n        if (!email) {\r\n            this.setState({errors: {age: 'Email is required'}});\r\n            isValid = false;\r\n        }\r\n\r\n        if (!phone) {\r\n            this.setState({errors: {age: 'Phone is required'}});\r\n            isValid = false;\r\n        }\r\n\r\n        if (!isValid) return;\r\n\r\n        const updatedContact = { \r\n            id, \r\n            name, \r\n            email, \r\n            phone \r\n        };\r\n        ;\r\n        this.props.updateContact(updatedContact);\r\n        this.setState({name: '',age: '', errors: {}});\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors} = this.state;\r\n        return (\r\n            <div className=\"card mb-3\">\r\n            <div className=\"card-header\">Edit Contact</div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this)}>\r\n                    <TextInputGroup \r\n                        name=\"name\" label=\"Name\"\r\n                        placeholder=\"Enter Name...\"\r\n                        value={name}\r\n                        onChange={this.onChange}\r\n                        error={errors.name}\r\n                    />\r\n                    <TextInputGroup \r\n                        name=\"email\" label=\"Email Address\"\r\n                        type=\"email\"\r\n                        placeholder=\"Enter Email...\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        error={errors.email}\r\n                    />\r\n                     <TextInputGroup \r\n                        name=\"phone\" label=\"Phone\"\r\n                        placeholder=\"Enter Phone...\"\r\n                        value={phone}\r\n                        onChange={this.onChange}\r\n                        error={errors.phone}\r\n                    />\r\n                    <input className=\"btn btn-dark btn-block\" type=\"submit\" value=\"Update Contact\"></input>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nEditContact.prototypes = {\r\n    updateContact: PropTypes.func.isRequired,\r\n    getContacts: PropTypes.func.isRequired,\r\n    contactList: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contactList: state.contact.contactList\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateContact,\r\n    getContacts\r\n})(EditContact);","import ContactListJson from '../Data/ContactList.json';\r\nimport { GET_CONTACTS, DELETE_CONTACT, ADD_CONTACT, UPDATE_CONTACT } from '../Actions/types.js';\r\n\r\n\r\nconst initialState = {\r\n    contactList: []\r\n};\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contactList: action.payload\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contactList: state.contactList.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contactList: [action.payload, ...state.contactList]\r\n            }\r\n        case UPDATE_CONTACT:\r\n                ;\r\n                return {\r\n                    ...state,\r\n                    contactList: state.contactList.map(contact => contact.id === action.payload.id ? action.payload : contact)\r\n                }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport contactReducer from './contactReducer';\r\n\r\nexport default combineReducers({\r\n    contact: contactReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose(applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport ContactList from './Components/contact/ContactList';\nimport AddContact from './Components/contact/AddContact';\nimport About from './Pages/About';\nimport {HashRouter as Router, Route, Switch}  from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport NotFound from './Pages/NotFound';\nimport Test from './Components/Test/Test';\nimport EditContact from './Components/contact/EditContact';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nclass App extends React.Component {\n\n  render() {\n    return <div className=\"App\">\n        <Provider store={store}>\n          <Router>\n            <div className=\"container-fluid\">\n              <Header></Header>\n            </div>\n            <div className=\"container-fluid\">\n              <Switch>\n                <Route exact path=\"/\" component={ContactList}></Route>\n                <Route exact path=\"/contact/add\" component={AddContact}></Route>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n                <Route exact path=\"/about\" component={About}></Route>\n                <Route exact path=\"/test\" component={Test}></Route>\n                <Route exact component={NotFound}></Route>\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n    </div>\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}